"""
M√≥dulo de An√°lise Explorat√≥ria (EDA) do projeto de Previs√£o de Demanda.
Recebe o dataframe j√° processado e realiza an√°lises iniciais e gr√°ficos.

Autor: Marcos Scatolino
Data: 2025-04-24
"""

# ================== IMPORTS ================== #
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns


# ================== FUN√á√ÉO PRINCIPAL ================== #
def executar_eda(df):
    """
    Executa a an√°lise explorat√≥ria dos dados recebidos:
    - Visualiza√ß√µes iniciais
    - Estat√≠sticas descritivas por tipo
    - Gr√°ficos b√°sicos com anota√ß√µes
    """

    # ================== VIS√ÉO GERAL ================== #
    print("üìä Primeiras Linhas do Dataset:")
    print(df.head())

    print("\n‚ÑπÔ∏è Informa√ß√µes do Dataset:")
    print(df.info())

    # ================== ESTAT√çSTICAS ================== #
    print("\nüìà Estat√≠sticas Descritivas (Num√©ricas):")
    print(df.select_dtypes(include='number').describe())

    print("\nüìÜ Estat√≠sticas da Coluna de Datas:")
    print("Data m√≠nima:", df["date"].min())
    print("Data m√°xima:", df["date"].max())
    print("Total de dias √∫nicos:", df["date"].nunique())

    # ================== GR√ÅFICO 1: Vendas ao longo do tempo ================== #
    plt.figure(num="üìà Vendas por Dia", figsize=(12, 5))
    df.groupby("date")["sales"].sum().plot()
    plt.title("üìà Vendas Totais por Dia")
    plt.xlabel("Data")
    plt.ylabel("Vendas")
    plt.tight_layout()
    plt.show()

    # ================== GR√ÅFICO 2: Vendas com e sem promo√ß√£o ================== #
    plt.figure(num="üõçÔ∏è Promo√ß√£o vs Sem Promo√ß√£o", figsize=(8, 5))
    sns.barplot(data=df, x="promotion", y="sales", estimator=sum, errorbar=None)
    plt.title("üõçÔ∏è Vendas Totais: Promo√ß√£o x Sem Promo√ß√£o")
    plt.xticks([0, 1], ["Sem Promo√ß√£o", "Com Promo√ß√£o"])
    plt.ylabel("Vendas Totais")
    plt.xlabel("")
    plt.tight_layout()
    plt.show()

    # ================== GR√ÅFICO 3: Vendas em Feriados (com anota√ß√µes) ================== #
    plt.figure(num="üéâ Vendas em Feriados", figsize=(8, 5))
    ax = sns.boxplot(data=df, x="feriado", y="sales")
    plt.title("üéâ Distribui√ß√£o de Vendas: Dias Com e Sem Feriado")
    plt.xticks([0, 1], ["Dia Normal", "Feriado"])
    plt.ylabel("Vendas")
    plt.xlabel("")

    # Adiciona anota√ß√µes no gr√°fico (mediana, Q1, Q3)
    grupos = df.groupby("feriado")["sales"]
    for i, (grupo, vendas) in enumerate(grupos):
        q1 = vendas.quantile(0.25)
        q2 = vendas.median()
        q3 = vendas.quantile(0.75)

        ax.text(i, q2, f"Mediana: {int(q2)}", ha='center', va='bottom', color='black', fontweight='bold')
        ax.text(i, q1, f"Q1: {int(q1)}", ha='center', va='top', color='gray')
        ax.text(i, q3, f"Q3: {int(q3)}", ha='center', va='bottom', color='gray')

    plt.tight_layout()
    plt.show()
